affinity: {}
route:
  route-mngmnt: null
  route-amqp: null
global:
  imagePullSecrets: null
  imageRegistry: null
image:
  debug: false
  pullPolicy: IfNotPresent
  pullSecrets: null
  registry: docker.io
  repository: bitnami/rabbitmq
  tag: 3.7.14
ingress:
  annotations: null
  enabled: false
  hostName: null
  path: /
  tls: false
  tlsSecret: myTlsSecret
livenessProbe:
  enabled: true
  failureThreshold: 6
  initialDelaySeconds: 120
  periodSeconds: 30
  successThreshold: 1
  timeoutSeconds: 20
metrics:
  annotations:
    prometheus.io/port: "9090"
    prometheus.io/scrape: "true"
  capabilities: bert,no_sort
  enabled: false
  env: {}
  image:
    pullPolicy: IfNotPresent
    pullSecrets: null
    registry: docker.io
    repository: kbudde/rabbitmq-exporter
    tag: v0.29.0
  resources: {}
nodeSelector: {}
persistence:
  accessMode: ReadWriteOnce
  enabled: true
  existingClaim: null
  path: /opt/bitnami/rabbitmq/var/lib/rabbitmq
  size: 8Gi
  storageClass: null
podAnnotations: {}
podLabels: {}
podManagementPolicy: OrderedReady
priorityClassName: null
rabbitmq:
  clustering:
    address_type: hostname
    k8s_domain: cluster.local
  configuration: |-
    ## Clustering
    cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
    cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
    cluster_formation.node_cleanup.interval = 10
    cluster_formation.node_cleanup.only_log_warning = true
    cluster_partition_handling = autoheal
    # queue master locator
    queue_master_locator=min-masters
    # enable guest user
    loopback_users.guest = false
  erlangCookie: null
  existingErlangSecret: null
  existingPasswordSecret: null
  extraConfiguration: |-
    #disk_free_limit.absolute = 50MB
    #management.load_definitions = /app/load_definition.json
  extraPlugins: null
  loadDefinition:
    enabled: false
    secretName: load-definition
  logs: '-'
  maxAvailableSchedulers: 2
  onlineSchedulers: 1
  password: null
  plugins: rabbitmq_management rabbitmq_peer_discovery_k8s
  rabbitmqClusterNodeName: null
  ulimitNofiles: "65536"
  username: user
rbacEnabled: true
readinessProbe:
  enabled: true
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 30
  successThreshold: 1
  timeoutSeconds: 20
replicas: 1
resources: {}
securityContext:
  enabled: true
  fsGroup: 1001
  runAsUser: 1001
service:
  annotations: null
  distPort: 25672
  loadBalancerSourceRanges: null
  managerPort: 15672
  nodePort: 30672
  port: 5672
  type: ClusterIP
tolerations: []
updateStrategy:
  type: RollingUpdate
volumePermissions:
  enabled: false
  image:
    pullPolicy: IfNotPresent
    pullSecrets: null
    registry: docker.io
    repository: bitnami/minideb
    tag: latest
  resources: {}
